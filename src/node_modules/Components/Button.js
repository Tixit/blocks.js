var Block = require('Block')
var proto = require('proto')

module.exports = proto(Block, function(superclass) {

    // static variables

    this.name = 'Button'


    // instance properties

	this.init = function(/*[label,] text*/) {
        if(arguments.length >= 2) {
            var label = arguments[0]
            var text = arguments[1]
        } else {
            var text = arguments[0]
        }

        this.domNode = document.createElement("input") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it
        superclass.init.call(this) // superclass constructor

        this.label = label
		this.attr('type','button');
		this.text = text
	}

    Object.defineProperty(this, 'text', {
        get: function() {
            return this.attr('value')
        },
        set: function(text) {
            this.attr('value', text)
        }
    })

})
