var proto = require('proto')

var Block = require('Block')
var Style = require("Style")

var domUtils = require('domUtils')



module.exports = proto(Block, function(superclass) {

    //static properties

    this.name = 'Text'

    this.defaultStyle = Style({
        whiteSpace: 'pre-wrap' // so whitespace is displayed (e.g. multiple spaces don't collapse)
    })

    this.init = function(/*[label,] text*/) {
        if(arguments.length === 1) {
            var text = arguments[0]
        } else {
            var label = arguments[0]
            var text = arguments[1]
        }

        if (text === undefined) text = '';

        superclass.init.call(this) // superclass constructor

        this.label = label
        this.text = text
    }

    // instance properties

    Object.defineProperty(this, 'text', {
        get: function() {
            return this.domNode[domUtils.textProperty]
        }, set: function(v) {
             this.domNode[domUtils.textProperty] = v
        }
    })
});


